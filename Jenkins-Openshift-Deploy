openshiftExec apiURL: '${env.openshifthost}', authToken: '${env.token}', command: 'echo "Hallo"', container: '', namespace: 'dev-playcourt', pod: 'vmlike-hackidea-1-pfrxk', verbose: 'false', waitTime: '', waitUnit: 'sec'

	stage 'buildInDevelopment'
	openshiftBuild apiURL: '${env.openshifthost}', authToken: '${env.token}', bldCfg: 'hackidea-lab-test', buildName: '', checkForTriggeredDeployments: 'false', commitID: '', namespace: 'dev-playcourt', showBuildLogs: 'true', verbose: 'false', waitTime: '60', waitUnit: 'min'

	stage 'deployInDevelopment'
	openshiftDeploy apiURL: '${env.openshifthost}', authToken: '${env.token}', depCfg: 'hackidea-lab-test', namespace: 'dev-playcourt', verbose: 'false', waitTime: '60', waitUnit: 'min'

openshiftExec apiURL: '${env.openshifthost}', authToken: '${env.token}', command: 'echo "Hello"', container: '', namespace: 'dev-playcourt', pod: ${POD}, waitTime: '60', waitUnit: 'min'

node('jenkins-agent') {
    // Git committer email
    sh "oc login '${env.openshifthost}' --token='${env.token}'"
    LS = sh (
        script: "oc get pods | grep 'Running' | grep 'hackidea-lab-test' | awk -F' ' '{print \$1}'",
        returnStdout: true
    ).trim()
    
    echo "hasil: ${LS}"
}
